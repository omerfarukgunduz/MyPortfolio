@model List<Experience>

@{
    ViewData["Title"] = "ExperienceList";
    Layout = "~/Views/Layout/Index.cshtml";
}



<div class="content">
		<div class="container-fluid">
			<h4 class="page-title">Deneyimler</h4>
			<div class="row">
				<div class="col-md-12">
					<div class="card">
						<div class="card-header">
							<div class="card-title">Deneyim Listesi</div>
						</div>
						<div class="card-body">
							<div class="card-sub">
								Deneyimler ile ilgili işlemleri aşağıdaki panelden yapabilirsiniz.
							</div>
							<table class="table mt-3">
								<thead>
									<tr>
										<th scope="col">#</th>
										<th scope="col">Başlık</th>
										<th scope="col">Unvan</th>
										<th scope="col">Tarih</th>
										<th scope="col">Sil</th>
										<th scope="col">Güncelle</th>
									</tr>
								</thead>
								<tbody>
									@foreach(var item in Model)
									{
										<tr>
											<td>@item.ExperieceId</td>
											<td>@item.Company</td>
											<td>@item.Title</td>
											<td>@item.Date</td>
                                        <td><a data-id="@item.ExperieceId" href="/Experience/DeleteExperience/@item.ExperieceId" class="btn btn-danger sil">Sil</a></td>
											<td><a href="/Experience/UpdateExperience/@item.ExperieceId" class="btn btn-success">Güncelle</a></td>
										</tr>
									}
								</tbody>
							</table>
						<a href="/Experience/CreateExperience/" class="btn btn-primary">Yeni Deneyim Girişi</a>
						</div>
					</div>
				</div>		
			</div>
		</div>
		</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Tüm "sil" sınıfına sahip öğeleri seç
    var deleteButtons = document.querySelectorAll(".sil");

    // Her bir buton için olay dinleyici ekle
    deleteButtons.forEach(function (button) {
        button.addEventListener("click", function (e) {
            e.preventDefault();
            var dataid = button.getAttribute("data-id");

            Swal.fire({
                title: 'Emin misiniz?',
                text: "Silmek istediğinizden emin misiniz?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Evet, sil!',
                cancelButtonText: 'İptal'
            }).then((result) => {
                if (result.isConfirmed) {
                    performDelete(dataid);
                }
            });
        });
    });

    function performDelete(dataid) {
        $.ajax({
            url: '/Experience/DeleteExperience', // Controller işleminin URL'sini doğru şekilde belirtin
            method: 'POST', // Veya GET, PUT, DELETE
            data: { id: dataid }, // İsteğe gönderilecek veriler
            success: function (data) {
                Swal.fire({
                    icon: 'success', // İkon tipi
                    title: 'Silindi!', // Başlık
                    text: 'İşlem başarıyla tamamlandı.', // Metin içeriği
                    showConfirmButton: false, // Onay butonunu gizle
                    timer: 1500 // Otomatik kapatılma süresi (isteğe bağlı)
                });

                // Belirli bir süre sonra sayfanın yeniden yüklenmesini sağla
                setTimeout(function () {
                    location.reload(); // Sayfayı yeniden yükle
                }, 1500);
            },
            error: function () {
                Swal.fire(
                    'Hata!',
                    'İşlem sırasında bir hata oluştu.',
                    'error'
                );
            }
        });
    }
</script>
